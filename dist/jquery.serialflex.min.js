/*!
 * jQuery serialflex
 * https://github.com/kevinmeunier/jquery-serialflex
 *
 * Copyright 2022 Meunier KÃ©vin
 * https://www.meunierkevin.com
 *
 * Released under the MIT license
 */
!function(e){"use strict";const t=e(window);let i,n={};e.fn.serialflex=function(s){const f=e.extend({},e.fn.serialflex.defaults,s),r=function(){l=!0},o=this;let l=!1;return e.extend(this,{init:function(){this.each(function(){const t=e(this),i=t.data("serialflex");let s=n[i]||e([]);n[i]=s.add(t)}),t.on("resize.serialflex",function(){clearTimeout(i),i=setTimeout(function(){o.resize()},100)}),o[f.forceRefresh?"refresh":"resize"](r)},refresh:function(e){let t=0;const i=setInterval(function(){10==t?(clearInterval(i),e()):(t++,o.resize())},50)},resize:function(t){e.each(n,function(t,i){let n=i.map(function(){return e(this).offset().top}).get(),s=0;for(let t=0;t<=n.length;t++)n[s]!=n[t]&&(o.adjustHeight(i.slice(s,t)),n=i.map(function(){return e(this).offset().top}).get(),s=t)}),t&&t()},adjustHeight:function(t){let i;1==l&&(i=t.height());const n=t.height("auto").map(function(){return e(this).height()}).get(),s=Math.max.apply(null,n);1==l&&t.height(i),t.height(s)}}),this.init(),this},e.serialflex={refresh:function(){t.trigger("resize.serialflex")}},e.fn.serialflex.defaults={forceRefresh:!1}}(jQuery);
